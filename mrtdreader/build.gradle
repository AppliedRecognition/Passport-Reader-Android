plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.21'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion 33

    namespace 'com.appliedrec.mrtdreader'

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 3
        versionName rootProject.version
        archivesBaseName = "mrtd-reader"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.10.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation "org.jmrtd:jmrtd:0.7.37"
    implementation "net.sf.scuba:scuba-sc-android:0.0.24"
    implementation "com.madgag.spongycastle:prov:1.58.0.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0"
    implementation 'io.reactivex.rxjava3:rxjava:3.1.6'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}


task javadoc(type: Javadoc, dependsOn: ':doclet:compileJava') {
    source = android.sourceSets.main.java.srcDirs

    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"

    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += files(ext.androidJar)

    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PUBLIC
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    exclude '**/Jama'
    exclude '**/jj2000'
    options.doclet("AppliedRecDoclet")
    options.docletpath(new File("${project.getRootDir()}/doclet/build/classes/java/main"))
    options.addStringOption("htmlsrc", "${project.getRootDir()}/doclet/src/docs")
    options.addStringOption("destpath", "${project.getRootDir()}/sample/docs")
    print("Generate documentation in ${project.getRootDir()}/sample/docs")
    failOnError = true
}